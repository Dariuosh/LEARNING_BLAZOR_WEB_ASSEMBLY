@page "/posts/create_post_2"
@inject NavigationManager NavigationManager

<EditForm Model="Model" OnValidSubmit="HandleValidSubmit">
	<DataAnnotationsValidator />
	@*<ValidationSummary />*@

	<div class="form-group form-check">
		<InputCheckbox id="isActive" class="form-check-input" @bind-Value="Model.IsActive" />
		<label class="form-check-label" for="isActive">@(Resources.DataDictionary.IsActive)</label>
		<div class="form-control-validation">
			<ValidationMessage For="() => Model.IsActive" />
		</div>
	</div>

	<div class="form-group">
		<label for="title">@(Resources.DataDictionary.Title)</label>
		<InputText id="title" class="form-control" @bind-Value="Model.Title" />
		<div class="form-control-validation">
			<ValidationMessage For="() => Model.Title" />
		</div>
	</div>

	<div class="form-group">
		<label for="description">@(Resources.DataDictionary.Body)</label>
		<InputTextArea id="description" class="form-control" @bind-Value="Model.Body" />
		<div class="form-control-validation">
			<ValidationMessage For="() => Model.Body" />
		</div>
	</div>

	<div class="form-group">
		<button type="submit" class="btn btn-primary">@(Resources.Buttons.Create)</button>
		<button type="reset" class="btn btn-secondary">@(Resources.Buttons.Reset)</button>
	</div>
</EditForm>

@code
{

	protected override void OnInitialized()
	{
		// نکته مهم
		// اگر مدل وجود نداشته باشد به خطا خواهیم خورد
		// پس مدل نباید نال باشد
		Model = new Models.Post();
	}

	public Models.Post Model { get; set; }

	private void HandleValidSubmit()
	{
		// Save Data!

		NavigationManager.NavigateTo(uri: "/learn_5100", forceLoad: false);
	}

}
